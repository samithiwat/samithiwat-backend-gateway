// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: blog-comment.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlogCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32        `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Errors     []string     `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	Data       *BlogComment `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BlogCommentResponse) Reset() {
	*x = BlogCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_comment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogCommentResponse) ProtoMessage() {}

func (x *BlogCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blog_comment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogCommentResponse.ProtoReflect.Descriptor instead.
func (*BlogCommentResponse) Descriptor() ([]byte, []int) {
	return file_blog_comment_proto_rawDescGZIP(), []int{0}
}

func (x *BlogCommentResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *BlogCommentResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *BlogCommentResponse) GetData() *BlogComment {
	if x != nil {
		return x.Data
	}
	return nil
}

type BlogCommentStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32    `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Errors     []string `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	Data       bool     `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BlogCommentStatusResponse) Reset() {
	*x = BlogCommentStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_comment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogCommentStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogCommentStatusResponse) ProtoMessage() {}

func (x *BlogCommentStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blog_comment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogCommentStatusResponse.ProtoReflect.Descriptor instead.
func (*BlogCommentStatusResponse) Descriptor() ([]byte, []int) {
	return file_blog_comment_proto_rawDescGZIP(), []int{1}
}

func (x *BlogCommentStatusResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *BlogCommentStatusResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *BlogCommentStatusResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type BlogCommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32          `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Errors     []string       `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	Data       []*BlogComment `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BlogCommentListResponse) Reset() {
	*x = BlogCommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_comment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogCommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogCommentListResponse) ProtoMessage() {}

func (x *BlogCommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blog_comment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogCommentListResponse.ProtoReflect.Descriptor instead.
func (*BlogCommentListResponse) Descriptor() ([]byte, []int) {
	return file_blog_comment_proto_rawDescGZIP(), []int{2}
}

func (x *BlogCommentListResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *BlogCommentListResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *BlogCommentListResponse) GetData() []*BlogComment {
	if x != nil {
		return x.Data
	}
	return nil
}

type FindAllCommentByPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug  string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Limit int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *FindAllCommentByPostRequest) Reset() {
	*x = FindAllCommentByPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_comment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllCommentByPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllCommentByPostRequest) ProtoMessage() {}

func (x *FindAllCommentByPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blog_comment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllCommentByPostRequest.ProtoReflect.Descriptor instead.
func (*FindAllCommentByPostRequest) Descriptor() ([]byte, []int) {
	return file_blog_comment_proto_rawDescGZIP(), []int{3}
}

func (x *FindAllCommentByPostRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *FindAllCommentByPostRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindAllCommentByPostRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type FindOneComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindOneComment) Reset() {
	*x = FindOneComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_comment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneComment) ProtoMessage() {}

func (x *FindOneComment) ProtoReflect() protoreflect.Message {
	mi := &file_blog_comment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneComment.ProtoReflect.Descriptor instead.
func (*FindOneComment) Descriptor() ([]byte, []int) {
	return file_blog_comment_proto_rawDescGZIP(), []int{4}
}

func (x *FindOneComment) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug     string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	UserId   uint32 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ParentId uint32 `protobuf:"varint,3,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Content  string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_comment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blog_comment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_blog_comment_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCommentRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *CreateCommentRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateCommentRequest) GetParentId() uint32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CreateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UpdateCommentRequest) Reset() {
	*x = UpdateCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_comment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentRequest) ProtoMessage() {}

func (x *UpdateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blog_comment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommentRequest) Descriptor() ([]byte, []int) {
	return file_blog_comment_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCommentRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateCommentLikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type StatCountType `protobuf:"varint,2,opt,name=type,proto3,enum=dto.StatCountType" json:"type,omitempty"`
}

func (x *UpdateCommentLikeRequest) Reset() {
	*x = UpdateCommentLikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_comment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentLikeRequest) ProtoMessage() {}

func (x *UpdateCommentLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blog_comment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentLikeRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommentLikeRequest) Descriptor() ([]byte, []int) {
	return file_blog_comment_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateCommentLikeRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCommentLikeRequest) GetType() StatCountType {
	if x != nil {
		return x.Type
	}
	return StatCountType_VIEW_INCREASE
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blog_comment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blog_comment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_blog_comment_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCommentRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_blog_comment_proto protoreflect.FileDescriptor

var file_blog_comment_proto_rawDesc = []byte{
	0x0a, 0x12, 0x62, 0x6c, 0x6f, 0x67, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x1a, 0x09, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a,
	0x13, 0x42, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x74, 0x6f,
	0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x67, 0x0a, 0x19, 0x42, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x77, 0x0a, 0x17, 0x42,
	0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x24,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64,
	0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x20, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x40, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x52, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x64, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x32, 0xe3, 0x03, 0x0a, 0x12,
	0x42, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x6c, 0x0a, 0x16, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x62,
	0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x51, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x62, 0x6c, 0x6f,
	0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c,
	0x6f, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e,
	0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f,
	0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x22, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x3c, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x61, 0x6d, 0x69, 0x74, 0x68, 0x69,
	0x77, 0x61, 0x74, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x42, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x01, 0x5a, 0x09, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blog_comment_proto_rawDescOnce sync.Once
	file_blog_comment_proto_rawDescData = file_blog_comment_proto_rawDesc
)

func file_blog_comment_proto_rawDescGZIP() []byte {
	file_blog_comment_proto_rawDescOnce.Do(func() {
		file_blog_comment_proto_rawDescData = protoimpl.X.CompressGZIP(file_blog_comment_proto_rawDescData)
	})
	return file_blog_comment_proto_rawDescData
}

var file_blog_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_blog_comment_proto_goTypes = []interface{}{
	(*BlogCommentResponse)(nil),         // 0: blog_comment.BlogCommentResponse
	(*BlogCommentStatusResponse)(nil),   // 1: blog_comment.BlogCommentStatusResponse
	(*BlogCommentListResponse)(nil),     // 2: blog_comment.BlogCommentListResponse
	(*FindAllCommentByPostRequest)(nil), // 3: blog_comment.FindAllCommentByPostRequest
	(*FindOneComment)(nil),              // 4: blog_comment.FindOneComment
	(*CreateCommentRequest)(nil),        // 5: blog_comment.CreateCommentRequest
	(*UpdateCommentRequest)(nil),        // 6: blog_comment.UpdateCommentRequest
	(*UpdateCommentLikeRequest)(nil),    // 7: blog_comment.UpdateCommentLikeRequest
	(*DeleteCommentRequest)(nil),        // 8: blog_comment.DeleteCommentRequest
	(*BlogComment)(nil),                 // 9: dto.BlogComment
	(StatCountType)(0),                  // 10: dto.StatCountType
}
var file_blog_comment_proto_depIdxs = []int32{
	9,  // 0: blog_comment.BlogCommentResponse.data:type_name -> dto.BlogComment
	9,  // 1: blog_comment.BlogCommentListResponse.data:type_name -> dto.BlogComment
	10, // 2: blog_comment.UpdateCommentLikeRequest.type:type_name -> dto.StatCountType
	3,  // 3: blog_comment.BlogCommentService.findAllCommentFromPost:input_type -> blog_comment.FindAllCommentByPostRequest
	5,  // 4: blog_comment.BlogCommentService.create:input_type -> blog_comment.CreateCommentRequest
	6,  // 5: blog_comment.BlogCommentService.update:input_type -> blog_comment.UpdateCommentRequest
	7,  // 6: blog_comment.BlogCommentService.updateLikes:input_type -> blog_comment.UpdateCommentLikeRequest
	8,  // 7: blog_comment.BlogCommentService.delete:input_type -> blog_comment.DeleteCommentRequest
	2,  // 8: blog_comment.BlogCommentService.findAllCommentFromPost:output_type -> blog_comment.BlogCommentListResponse
	0,  // 9: blog_comment.BlogCommentService.create:output_type -> blog_comment.BlogCommentResponse
	0,  // 10: blog_comment.BlogCommentService.update:output_type -> blog_comment.BlogCommentResponse
	1,  // 11: blog_comment.BlogCommentService.updateLikes:output_type -> blog_comment.BlogCommentStatusResponse
	1,  // 12: blog_comment.BlogCommentService.delete:output_type -> blog_comment.BlogCommentStatusResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_blog_comment_proto_init() }
func file_blog_comment_proto_init() {
	if File_blog_comment_proto != nil {
		return
	}
	file_dto_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_blog_comment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_comment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogCommentStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_comment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogCommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_comment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllCommentByPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_comment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOneComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_comment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_comment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_comment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentLikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blog_comment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blog_comment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blog_comment_proto_goTypes,
		DependencyIndexes: file_blog_comment_proto_depIdxs,
		MessageInfos:      file_blog_comment_proto_msgTypes,
	}.Build()
	File_blog_comment_proto = out.File
	file_blog_comment_proto_rawDesc = nil
	file_blog_comment_proto_goTypes = nil
	file_blog_comment_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BlogCommentServiceClient is the client API for BlogCommentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlogCommentServiceClient interface {
	FindAllCommentFromPost(ctx context.Context, in *FindAllCommentByPostRequest, opts ...grpc.CallOption) (*BlogCommentListResponse, error)
	Create(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*BlogCommentResponse, error)
	Update(ctx context.Context, in *UpdateCommentRequest, opts ...grpc.CallOption) (*BlogCommentResponse, error)
	UpdateLikes(ctx context.Context, in *UpdateCommentLikeRequest, opts ...grpc.CallOption) (*BlogCommentStatusResponse, error)
	Delete(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*BlogCommentStatusResponse, error)
}

type blogCommentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBlogCommentServiceClient(cc grpc.ClientConnInterface) BlogCommentServiceClient {
	return &blogCommentServiceClient{cc}
}

func (c *blogCommentServiceClient) FindAllCommentFromPost(ctx context.Context, in *FindAllCommentByPostRequest, opts ...grpc.CallOption) (*BlogCommentListResponse, error) {
	out := new(BlogCommentListResponse)
	err := c.cc.Invoke(ctx, "/blog_comment.BlogCommentService/findAllCommentFromPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogCommentServiceClient) Create(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*BlogCommentResponse, error) {
	out := new(BlogCommentResponse)
	err := c.cc.Invoke(ctx, "/blog_comment.BlogCommentService/create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogCommentServiceClient) Update(ctx context.Context, in *UpdateCommentRequest, opts ...grpc.CallOption) (*BlogCommentResponse, error) {
	out := new(BlogCommentResponse)
	err := c.cc.Invoke(ctx, "/blog_comment.BlogCommentService/update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogCommentServiceClient) UpdateLikes(ctx context.Context, in *UpdateCommentLikeRequest, opts ...grpc.CallOption) (*BlogCommentStatusResponse, error) {
	out := new(BlogCommentStatusResponse)
	err := c.cc.Invoke(ctx, "/blog_comment.BlogCommentService/updateLikes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogCommentServiceClient) Delete(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*BlogCommentStatusResponse, error) {
	out := new(BlogCommentStatusResponse)
	err := c.cc.Invoke(ctx, "/blog_comment.BlogCommentService/delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlogCommentServiceServer is the server API for BlogCommentService service.
type BlogCommentServiceServer interface {
	FindAllCommentFromPost(context.Context, *FindAllCommentByPostRequest) (*BlogCommentListResponse, error)
	Create(context.Context, *CreateCommentRequest) (*BlogCommentResponse, error)
	Update(context.Context, *UpdateCommentRequest) (*BlogCommentResponse, error)
	UpdateLikes(context.Context, *UpdateCommentLikeRequest) (*BlogCommentStatusResponse, error)
	Delete(context.Context, *DeleteCommentRequest) (*BlogCommentStatusResponse, error)
}

// UnimplementedBlogCommentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBlogCommentServiceServer struct {
}

func (*UnimplementedBlogCommentServiceServer) FindAllCommentFromPost(context.Context, *FindAllCommentByPostRequest) (*BlogCommentListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllCommentFromPost not implemented")
}
func (*UnimplementedBlogCommentServiceServer) Create(context.Context, *CreateCommentRequest) (*BlogCommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedBlogCommentServiceServer) Update(context.Context, *UpdateCommentRequest) (*BlogCommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedBlogCommentServiceServer) UpdateLikes(context.Context, *UpdateCommentLikeRequest) (*BlogCommentStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLikes not implemented")
}
func (*UnimplementedBlogCommentServiceServer) Delete(context.Context, *DeleteCommentRequest) (*BlogCommentStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterBlogCommentServiceServer(s *grpc.Server, srv BlogCommentServiceServer) {
	s.RegisterService(&_BlogCommentService_serviceDesc, srv)
}

func _BlogCommentService_FindAllCommentFromPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllCommentByPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogCommentServiceServer).FindAllCommentFromPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_comment.BlogCommentService/FindAllCommentFromPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogCommentServiceServer).FindAllCommentFromPost(ctx, req.(*FindAllCommentByPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogCommentService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogCommentServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_comment.BlogCommentService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogCommentServiceServer).Create(ctx, req.(*CreateCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogCommentService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogCommentServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_comment.BlogCommentService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogCommentServiceServer).Update(ctx, req.(*UpdateCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogCommentService_UpdateLikes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCommentLikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogCommentServiceServer).UpdateLikes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_comment.BlogCommentService/UpdateLikes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogCommentServiceServer).UpdateLikes(ctx, req.(*UpdateCommentLikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogCommentService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogCommentServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_comment.BlogCommentService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogCommentServiceServer).Delete(ctx, req.(*DeleteCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlogCommentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blog_comment.BlogCommentService",
	HandlerType: (*BlogCommentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "findAllCommentFromPost",
			Handler:    _BlogCommentService_FindAllCommentFromPost_Handler,
		},
		{
			MethodName: "create",
			Handler:    _BlogCommentService_Create_Handler,
		},
		{
			MethodName: "update",
			Handler:    _BlogCommentService_Update_Handler,
		},
		{
			MethodName: "updateLikes",
			Handler:    _BlogCommentService_UpdateLikes_Handler,
		},
		{
			MethodName: "delete",
			Handler:    _BlogCommentService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blog-comment.proto",
}
